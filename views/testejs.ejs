<!doctype html>
<html lang="en">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">

    <title>Hello, world! hye</title>
  </head>
  <body>
    <h1>Electron Application</h1>
    <label for="customer_id">customer_id</label>
    <input type="text" name="customer_id" id="customer_id">
    <label for="customer_name">customer_name</label>
    <input type="text" name="customer_name" id="customer_name">
    <label for="customer_phone">customer_phone</label>
    <input type="text" name="" id="customer_phone">
    <label for="customer_address">customer_address</label>
    <input type="text" name="" id="customer_address">
    
    <br>
    <br>
    <label for="invoiceid"> <b> Invoice ID: </b></label>
    <p id="invoiceid"></p>
    <button id='additem' >AddItem</button>
    <table class="table table-bordered table-responsive-md table-striped text-center">
        <thead>
          <tr>
            <th class="text-center">Quantity</th>
            <th class="text-center">Product ID</th>
            <th class="text-center">Product Name</th>
            <th class="text-center">Product Price</th>
            <th class="text-center">Total</th>
            <th class="text-center">Net Total</th>
            <th class="text-center">Remove</th>
          </tr>
        </thead>
        <tbody id="table_body">
          <tr id="row1">
            <td class="pt-3-half quantity" contenteditable="true" id="quantity"></td>
            <td class="pt-3-half productid" contenteditable="true" id="productid" ></td>
            <td class="pt-3-half productname" contenteditable="true" id="productname"></td>
            <td class="pt-3-half productprice" contenteditable="true" id="productprice"></td>
            <td class="pt-3-half total" contenteditable="true" id="total"></td>></td>
            <td class="pt-3-half nettotal" contenteditable="true" id="nettotal"></td>></td>
            <!-- <td class="pt-3-half">
              <span class="table-up"><a href="#!" class="indigo-text"><i class="fas fa-long-arrow-alt-up"
                    aria-hidden="true"></i></a></span>
              <span class="table-down"><a href="#!" class="indigo-text"><i class="fas fa-long-arrow-alt-down"
                    aria-hidden="true"></i></a></span>
            </td> -->
            <td>
              <span class="table-remove" ><button type="button" 
                  class="btn btn-danger btn-rounded btn-sm my-0">Remove</button></span>
            </td>
            </tr>

          
        

          <!-- <tr>
            <td class="pt-3-half quantity" contenteditable="true" id="quantity"></td>
            <td class="pt-3-half productid" contenteditable="true" id="productid" ></td>
            <td class="pt-3-half productname" contenteditable="true" id="productname"></td>
            <td class="pt-3-half productprice" contenteditable="true" id="productprice"></td>
            <td class="pt-3-half total" contenteditable="true" id="total"></td>></td>
            <td class="pt-3-half nettotal" contenteditable="true" id="nettotal"></td>></td> -->
            <!-- <td class="pt-3-half">
              <span class="table-up"><a href="#!" class="indigo-text"><i class="fas fa-long-arrow-alt-up"
                    aria-hidden="true"></i></a></span>
              <span class="table-down"><a href="#!" class="indigo-text"><i class="fas fa-long-arrow-alt-down"
                    aria-hidden="true"></i></a></span>
            </td> -->
            <!-- <td>
              <span class="table-remove" ><button type="button" 
                  class="btn btn-danger btn-rounded btn-sm my-0">Remove</button></span>
            </td>
          </tr> -->
         
          <!-- This is our clonable table line hy -->
          
          
        </tbody>
        <tr id='nettotalfoot'>
          <td></td>
          <td></td>
          <td></td>
          <td></td>
          <td colspan="2" class="total-line">Subtotal</td>
          <td class="total-value"><div id="subtotal"></div></td>
      </tr>
      </table>
      <button id="submitdata" onclick="submitFormData()">Submit</button>
      <script>

        function uuidv4() {
          return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
            return v.toString(16);
          });
        }
        
        var invoice_uuid = uuidv4()
        var price_removed=0;
        var customerId;
        var customerName;
        var customerPhone;
        var customerAddress;
        var flag_after_awaitcustomercheck;
        var today = new Date();
        var date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();
        var time = today.getHours() + ":" + today.getMinutes() + ":" + today.getSeconds();
        var dateTime = date+' '+time;

        $('#customer_id').on('keydown',function(e){
        if (e.code=="Tab" || e.code=="Enter"){  
          customerId = ($(this).val())
          console.log("cid",customerId)
        function getQuote(){
        var total;
        var quote
        var customer_existance_flag;
        return new Promise(function(resolve,reject){
            console.log('in promise')
            quote='how are you'
            var url = "http://localhost:3000/customers"
                // console.log("cid",customerId)
                var xhttp = new XMLHttpRequest();
                xhttp.onreadystatechange = function() {
                if (this.readyState == 4 && this.status == 200) {

                    var json1 = JSON.parse(this.responseText)
                    var json = JSON.parse(this.responseText)[0]
                    var keys = Object.keys(json1)
                    console.log('keys:',json1)
                    if (json1.hasOwnProperty('result')){
                        customer_existance_flag=false
                    }
                    else{
                        console.log("In else Customer Exists")
                        customer_existance_flag=true
                        customerName = json.customer_name
                        customerPhone = json.customer_phone
                        customerAddress = json.address
                        console.log('mjson',json)
                        console.log('check',customerName,customerPhone,customerAddress)
                        $('#customer_name').val(customerName)
                        $('#customer_phone').val(customerPhone)
                        $('#customer_address').val(customerAddress)
                    }
                    resolve(customer_existance_flag) 

                }
                
            }
            
                url = url+'?id='+customerId
                console.log(url)
                xhttp.open("GET", url , true);
                xhttp.send();
                // console.log('resp',.responseText)
                

        })
        
    }
    async function main(){
        console.log("In main func")
        var customerchekreturn = await getQuote()
        flag_after_awaitcustomercheck = customerchekreturn
        console.log("My quote is ", customerchekreturn)
    }
    main()
  }
    
  
  })
  $('#invoiceid').text(invoice_uuid)


        //Adding customer information
      //   function check_if_customer_exists(){

      //   $('#customer_id').on('keydown',function(e){
      //     var customer_exists_flag;
      //       console.log(e.code)
      //       var customerId;
      //       var customerName;
      //       var customerPhone;
      //       var customerAddress;
      //       var total;
      //       // console.log(this)
      //       return new Promise(function(resolve, reject){

            
      //       var url = "http://localhost:3000/customers"
      //       if (e.code=="Tab" || e.code=="Enter"){
      //           customerId = ($(this).val())
      //           // console.log("cid",customerId)
      //           var xhttp = new XMLHttpRequest();
      //           xhttp.onreadystatechange = function() {
      //           if (this.readyState == 4 && this.status == 200) {
      //           // console.log(newTr)
      //           var json = JSON.parse(this.responseText)[0];
      //           console.log("L",json)
      //           if (json==undefined){
      //             console.log("Error")
      //             customer_exists_flag = false
      //           }
      //           else{
      //             console.log("True")
      //             customer_exists_flag = true


      //           // if(Object.keys(json).includes("customer_id") && Object.keys(json).includes("customer_name")){
      //           //     console.log("True")
      //           //     customer_exists_flag = true;
      //           // }
      //           // else{
      //           //   console.log("False")
      //           //   customer_exists_flag = false;
      //           // }
      //           // console.log('resp',this.responseText)
      //           // customer_exists_flag =
      //           // console.log('json',json)
      //           customerName = json.customer_name
      //           customerPhone = json.customer_phone
      //           customerAddress = json.address

      //           // console.log(customerName,customerPhone,customerAddress)

      //           $('#customer_name').val(customerName)
      //           $('#customer_phone').val(customerPhone)
      //           $('#customer_address').val(customerAddress)

      //           }
      //           resolve('customer_exists_flag') 

      //       }
      //       console.log('Flag 2',customer_exists_flag)
             
      //     }
      //           console.log('Flag 3',customer_exists_flag)

      //           url = url+'?id='+customerId
      //           console.log(url)
      //           xhttp.open("GET", url , true);
      //           xhttp.send();
                
                
                
      //   }
        

      //   // promise ends heres
      // })
      //   console.log("Flag 1",customer_exists_flag)
        
        
      //     })

      //   }

      //   console.log("Fun log",check_if_customer_exists())

      //   async function main(){
      //     var t = await check_if_customer_exists();
      //     console.log("Async var is",t)
      //   }
      //   main()
        

        // $('tbody').on('click','tr',function(){
        //   // console.log($(this).hasClass('productid'))
        //   console.log($(this).find('td').hasClass('productname'))
        //   // $(this).find('td').each(function(){
        //   //   console.log($(this).hasClass('productname'))
        //   // })
        //   // console.log($(this))
          
        //   $(this).find('td').each(function(){
        //     $(this).each(function(){
        //       // console.log(this)
        //       $(this).find('.productname').text()
        //       $(this).removeClass('productid')
        //       $(this).removeClass('productprice')
        //       console.log('PN',$(this).text())

        //     })
        //   })

        //   // $(this).removeClass
        //   // console.log('clicked',$(this).hasClass('dataadded'))
        //   // if ('clicked',$(this).hasClass('productid') ==false){
        //   //   $('#productname').addClass('productid')
        //   //   console.log('Adding')
          
        //   // if('clicked',$('tbody td').hasClass('productname')){var i;}
        //   // else{
        //   // $('#productname').addClass('productname')}
        // })

        function insertInInvoicesAllInvoices(customerId_,customerAddress_,customerName_,customerPhone_,subtotal_){

          $('#table_body tr').each(function(data){
            console.log($(this).children('tr').attr('id'))
            console.log($(this).find('#quantity').text())
            var rowId = $(this).children('tr').attr('id')
            var purchased_product_id = $(this).find('#productid').text()
            var purchased_product_name = $(this).find('#productname').text()
            var purchased_product_price = $(this).find('#productprice').text()
            var purchased_product_price = $(this).find('#productprice').text()
            var purchased_product_quantity = $(this).find('#quantity').text()
            
            console.log(rowId,purchased_product_id,purchased_product_name,purchased_product_price,purchased_product_quantity)
            // var currentRowData = {row1:{customer_id:customerId_,
            //                       product_id:purchased_product_id,
            //                       product_price:purchased_product_price,
            //                       product_name:purchased_product_name
            //                       }}
            var currentRowData ={}
            currentRowData.customer_id=customerId_
            currentRowData.product_id=purchased_product_id
            currentRowData.product_price=purchased_product_price
            currentRowData.product_name=purchased_product_name
            currentRowData.date_time=dateTime
            currentRowData.invoice_id=invoice_uuid
            currentRowData.product_quantity=purchased_product_quantity
            const postallinvoicesurl = 'http://localhost:3000/allinvoices'
            $.ajax({
                url:postallinvoicesurl,
                type:"POST",
                dataType:"json",
                data:currentRowData
              })
                                                
            console.log("TABLE ROW COUNT", currentRowData)
            
          })
          //Adding data to invoices table after filling allinvoices table
          var invoicesData = {}
          invoicesData.invoice_id=invoice_uuid
          invoicesData.customer_id=customerId_
          invoicesData.customer_name=customerName_
          invoicesData.date_time=dateTime
          invoicesData.sub_total=subtotal_
          const postinvoicesurl = 'http://localhost:3000/invoices'
            $.ajax({
                url:postinvoicesurl,
                type:"POST",
                dataType:"json",
                data:invoicesData
              })
            }


        


        function submitFormData(){
          var customerId_ = $('#customer_id').val()
          var customerAddress_ = $('#customer_address').val()
          var customerName_ = $('#customer_name').val()
          var customerPhone_ = $('#customer_phone').val()
          var subtotal_ = $('.total-value').text()
          var postData = {
            "customer_id":customerId_,
            "customer_name":customerName_,
            "customer_phone":customerPhone_,
            "address":customerAddress_
          }
          
          if(flag_after_awaitcustomercheck==true){
            // If customer found then get all the data from invoice table and fill allinvoices table of the database
            // After filling allinvoices table fill invoice table as well
            console.log("Customer found")
            // console.log(customerAddress,customerId,customerName,customerPhone)
            insertInInvoicesAllInvoices(customerId_,customerAddress_,customerName_,customerPhone_,subtotal_)
            
          }
          else{ 
            // If customer doesnot exists in the database then add data in customers table using POST request           
            console.log("Customer not found")
            console.log(customerAddress_,customerId_,customerName_,customerPhone_)
            function insertCustomers(){
              console.log("In function insertCustomers()")
              return new Promise(function(resolve,reject){
            const getUrl = 'http://localhost:3000/customers'
            $.ajax({
                url:getUrl,
                type:"POST",
                dataType:"json",
                data:postData,
                success:function(result){
                    console.log('results', result)
                },
                error:function(err){
                    console.log(err)
                }
            });
            resolve("ok")
          })
          }
            async function insertDataAfterCustomerRrgistered(){
              var status_ = await insertCustomers()
              console.log("Printing status",status_)
              // Wait for the completion of customer insertion after that insert invoices
              if (status_==="ok"){
                console.log("GO AHEAD")
                insertInInvoicesAllInvoices(customerId_,customerAddress_,customerName_,customerPhone_,subtotal_)
              }

            }
            insertDataAfterCustomerRrgistered()
          }
        }

        var nettotal=0;
        $('tbody').on('keydown','.productid',function(e){

            var productId;
            var productName;
            var productPrice;
            var Quantity;
            var total;
            
            var url = "http://localhost:3000/product"
            if (e.code=="Tab" || e.code=="Enter"){
              console.log('e.code',flag_after_awaitcustomercheck)

                  // If the customer is already present in the database
                  if (flag_after_awaitcustomercheck==true){
                    var urlproducts = "http://localhost:3000/product"
                    var urlallinvoices = "http://localhost:3000/allinvoices"
                    console.log("111",customerName,customerId)
                    var xhttpallinvoices = new XMLHttpRequest();
                    xhttpallinvoices.onreadystatechange = function(){
                      if (this.readyState == 4 && this.status == 200) {
                      // console.log(newTr)
                      var json = JSON.parse(this.responseText)[0];
                      console.log('myjson',json)
                      //This means that the customer exists but he has not purchased the curret product
                      //customer is buying this product for the first time
                      if (json==undefined){
                        var xhttpnewdata = new XMLHttpRequest();
                        xhttpnewdata.onreadystatechange = function(){
                          if (this.readyState == 4 && this.status == 200) {
                            console.log("myjson resp1",this.responseText)
                            var json = JSON.parse(this.responseText)[0];
                            insertProductDetailsInvoice(json)
                          }

                        }
                        urlproducts = urlproducts + '?id='+productId
                        console.log('urlproducts',urlproducts)
                        xhttpnewdata.open("GET",urlproducts,true);
                        xhttpnewdata.send()

                      }
                      else{
                        // The the customer has already purchased the selected product the fetch the last stored price for him
                       insertProductDetailsInvoice(json)
                      }
                      }

                    }
                      productId = ($(this).text())
                      urlallinvoices = urlallinvoices+'?customer_id='+customerId+'&product_id='+productId
                      console.log(urlallinvoices)
                      xhttpallinvoices.open("GET", urlallinvoices , true);
                      xhttpallinvoices.send();

                  }

            // If the customer is new      
            else{      

                productId = ($(this).text())
                var xhttp = new XMLHttpRequest();
                xhttp.onreadystatechange = function() {
                if (this.readyState == 4 && this.status == 200) {
                // console.log(newTr)
                var json = JSON.parse(this.responseText)[0];
                insertProductDetailsInvoice(json)
                // console.log('json',json)
                // productName = json.product_name
                // productPrice = json.product_price
                // var Quantity = $('.quantity').text()
                // console.log('Quantity log', $(this).text(), Quantity)
                // if (Quantity==0 || Quantity<0){
                //     console.log("IF")
                // total = 1* productPrice}
                // else{
                //     console.log("ELSE")
                // total = Quantity*productPrice
                // }
                // // console.log(Quantity)
                // $('.productname').text(productName)
                // $('.productprice').text(productPrice)
                // $('.total').text(total)
                // // console.log("total 1",total)
                // // console.log("nettotal 1",nettotal)
                // // console.log("price_removed",price_removed)
                // nettotal= nettotal + total
                // // console.log("total 2",total)
                // // console.log("nettotal 2",nettotal)
                // $('.total-value').text(nettotal)
                // price_removed = 0
                // total = 0
                // // $('.nettotal').text(nettotal)

                // // console.log('nettotal',nettotal)  
                                        
            }
                };
                url = url+'?id='+productId
                console.log(url)
                xhttp.open("GET", url , true);
                xhttp.send();
                
                
              }
              Quantity=1
            }
            
        
            
            
            
        })
        
        function insertProductDetailsInvoice(incomingjson){
                // var json = JSON.parse(this.responseText)[0];
                json = incomingjson
                productName = json.product_name
                productPrice = json.product_price
                var Quantity = $('.quantity').text()
                console.log('Quantity log', $(this).text(), Quantity)
                if (Quantity==0 || Quantity<0){
                    console.log("IF")
                total = 1* productPrice}
                else{
                    console.log("ELSE")
                total = Quantity*productPrice
                }
                // console.log(Quantity)
                $('.productname').text(productName)
                $('.productprice').text(productPrice)
                $('.total').text(total)
                // console.log("total 1",total)
                // console.log("nettotal 1",nettotal)
                // console.log("price_removed",price_removed)
                nettotal= nettotal + total
                // console.log("total 2",total)
                // console.log("nettotal 2",nettotal)
                $('.total-value').text(nettotal)
                price_removed = 0
                total = 0
                // $('.nettotal').text(nettotal)

                // console.log('nettotal',nettotal)
        }

        
        // Button to add new rows in the table 

        // function AddItem(){
        var rowcount = 1
        $(document).ready(function(){
          
        var a = $('#table_body').html()
        $('#additem').on('click',function(){
            lastrowcheck = '#row'+rowcount
            console.log('row check',$('#row1').find('#productid').text())

            // This if statement tests if the last row is filled or not before adding new row
            
            if('row check',$(lastrowcheck).find('#productid').text()==''){
              console.log("Please Fill the current row first")
            }
            else{
            rowcount=rowcount+1
            $(".quantity").removeAttr('contenteditable')
            $(".productname").removeAttr('contenteditable')
            $(".productprice").removeAttr('contenteditable')
            $(".productid").removeAttr('contenteditable')
            $(".total").removeAttr('contenteditable')

            $(".quantity").toggleClass('quantity')
            $(".productname").toggleClass('productname')
            $(".productid").toggleClass('productid')  
            $(".productprice").toggleClass('productprice') 
            $(".total").toggleClass('total')
            // $(".nettotal").toggleClass('nettotal')  
            
          // $(".productname").removeClass('productname') 
            
            // console.log('TB:',a)
            // console.log(newRow(rowcount))
            // $('#table_body').append(newTr)
            $('#table_body').append(newRow(rowcount))
            

            console.log('rowcount inside',rowcount)
            }

            })            
        })
        // }

        // Button to remove rows from the table

        $(document).ready(function(){
          $('tbody').on('click','.table-remove',function(){
            console.log("This var ",$(this).closest('tr td'))

            $(this).closest('tr').each(function(){
              var t = Array($(this).text())
              
              console.log('Data',$(this).find('#total').text())
              price_removed = $(this).find('#total').text()
              nettotal = nettotal - price_removed
              var subtotal = $('.total-value').text()
              console.log('net total before price removed',subtotal)
              subtotal = subtotal - price_removed
              $('.total-value').text(subtotal)
              console.log('remove',price_removed)
              console.log('net total after price removed',subtotal)
              // nettotal-price_removed
              // $('.nettotal').text(nettotal-price_removed)a
            })
            $(this).closest("tr").remove();
            console.log('test1')
          })
        })
        
    </script>

      <script>
        
        console.log('rowcount outside',rowcount)
          const $tableID = $('#table');
 const $BTN = $('#export-btn');
 const $EXPORT = $('#export');
function newRow(rowcount) {
 const newTr = `
 <tr id=row`+rowcount+`>
            <td class="pt-3-half quantity" contenteditable="true" id="quantity"></td>
            <td class="pt-3-half productid" contenteditable="true" id="productid" ></td>
            <td class="pt-3-half productname" contenteditable="true" id="productname"></td>
            <td class="pt-3-half productprice" contenteditable="true" id="productprice"></td>
            <td class="pt-3-half total" contenteditable="true" id="total"></td>></td>
            <td class="pt-3-half nettotal" contenteditable="true" id="nettotal"></td>></td>
            <!-- <td class="pt-3-half">
              <span class="table-up"><a href="#!" class="indigo-text"><i class="fas fa-long-arrow-alt-up"
                    aria-hidden="true"></i></a></span>
              <span class="table-down"><a href="#!" class="indigo-text"><i class="fas fa-long-arrow-alt-down"
                    aria-hidden="true"></i></a></span>
            </td> -->
            <td>
              <span class="table-remove" ><button type="button" 
                  class="btn btn-danger btn-rounded btn-sm my-0">Remove</button></span>
            </td>
          </tr>
 `;
 return newTr
        }
//  $('.table-add').on('click', 'i', () => {

//    const $clone = $tableID.find('tbody tr').last().clone(true).removeClass('hide table-line');

//    if ($tableID.find('tbody tr').length === 0) {

//      $('tbody').append(newTr);
//    }

//    $tableID.find('table').append($clone);
//  });

//  $tableID.on('click', '.table-remove', function () {

//    $(this).parents('tr').detach();
//  });

//  $tableID.on('click', '.table-up', function () {

//    const $row = $(this).parents('tr');

//    if ($row.index() === 1) {
//      return;
//    }

//    $row.prev().before($row.get(0));
//  });

//  $tableID.on('click', '.table-down', function () {

//    const $row = $(this).parents('tr');
//    $row.next().after($row.get(0));
//  });

//  // A few jQuery helpers for exporting only
//  jQuery.fn.pop = [].pop;
//  jQuery.fn.shift = [].shift;

//  $BTN.on('click', () => {

//    const $rows = $tableID.find('tr:not(:hidden)');
//    const headers = [];
//    const data = [];

//    // Get the headers (add special header logic here)
//    $($rows.shift()).find('th:not(:empty)').each(function () {

//      headers.push($(this).text().toLowerCase());
//    });

//    // Turn all existing rows into a loopable array
//    $rows.each(function () {
//      const $td = $(this).find('td');
//      const h = {};

//      // Use the headers from earlier to name our hash keys
//      headers.forEach((header, i) => {

//        h[header] = $td.eq(i).text();
//      });

//      data.push(h);
//    });

//    // Output the result
//    $EXPORT.text(JSON.stringify(data));
//  });
      </script>
      
    </body>

</html>